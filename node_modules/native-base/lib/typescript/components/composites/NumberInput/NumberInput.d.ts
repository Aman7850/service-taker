import React from 'react';
declare const _default: React.MemoExoticComponent<React.ForwardRefExoticComponent<import("../../primitives/Input/types").InterfaceInputProps & import("../../primitives/Box").InterfaceBoxProps<import("../../primitives/Input/types").InterfaceInputProps & import("../../primitives/Box").InterfaceBoxProps<import("../../primitives/Input/types").InterfaceInputProps & import("../../primitives/Box").InterfaceBoxProps<import("../../primitives/Input/types").InterfaceInputProps & import("../../primitives/Box").InterfaceBoxProps<import("../../primitives/Input/types").InterfaceInputProps & import("../../primitives/Box").InterfaceBoxProps<import("../../primitives/Input/types").InterfaceInputProps & import("../../primitives/Box").InterfaceBoxProps<import("../../primitives/Input/types").InterfaceInputProps & import("../../primitives/Box").InterfaceBoxProps<import("../../primitives/Input/types").InterfaceInputProps & import("../../primitives/Box").InterfaceBoxProps<import("../../primitives/Input/types").InterfaceInputProps & import("../../primitives/Box").InterfaceBoxProps<import("../../primitives/Input/types").InterfaceInputProps & import("../../primitives/Box").InterfaceBoxProps<import("../../primitives/Input/types").InterfaceInputProps & import("../../primitives/Box").InterfaceBoxProps<import("../../primitives/Input/types").InterfaceInputProps & any & {
    onChange?: ((value: number) => void) | undefined;
    min?: number | undefined;
    max?: number | undefined;
    step?: number | undefined;
    precision?: number | undefined;
    isReadOnly?: boolean | undefined;
    isInvalid?: boolean | undefined;
    isDisabled?: boolean | undefined;
    keepWithinRange?: boolean | undefined;
    allowMouseWheel?: boolean | undefined;
    clampValueOnBlur?: boolean | undefined;
    focusInputOnChange?: boolean | undefined;
    getAriaValueText?: boolean | undefined;
    children?: JSX.Element | JSX.Element[] | undefined;
}> & {
    onChange?: ((value: number) => void) | undefined;
    min?: number | undefined;
    max?: number | undefined;
    step?: number | undefined;
    precision?: number | undefined;
    isReadOnly?: boolean | undefined;
    isInvalid?: boolean | undefined;
    isDisabled?: boolean | undefined;
    keepWithinRange?: boolean | undefined;
    allowMouseWheel?: boolean | undefined;
    clampValueOnBlur?: boolean | undefined;
    focusInputOnChange?: boolean | undefined;
    getAriaValueText?: boolean | undefined;
    children?: JSX.Element | JSX.Element[] | undefined;
}> & {
    onChange?: ((value: number) => void) | undefined;
    min?: number | undefined;
    max?: number | undefined;
    step?: number | undefined;
    precision?: number | undefined;
    isReadOnly?: boolean | undefined;
    isInvalid?: boolean | undefined;
    isDisabled?: boolean | undefined;
    keepWithinRange?: boolean | undefined;
    allowMouseWheel?: boolean | undefined;
    clampValueOnBlur?: boolean | undefined;
    focusInputOnChange?: boolean | undefined;
    getAriaValueText?: boolean | undefined;
    children?: JSX.Element | JSX.Element[] | undefined;
}> & {
    onChange?: ((value: number) => void) | undefined;
    min?: number | undefined;
    max?: number | undefined;
    step?: number | undefined;
    precision?: number | undefined;
    isReadOnly?: boolean | undefined;
    isInvalid?: boolean | undefined;
    isDisabled?: boolean | undefined;
    keepWithinRange?: boolean | undefined;
    allowMouseWheel?: boolean | undefined;
    clampValueOnBlur?: boolean | undefined;
    focusInputOnChange?: boolean | undefined;
    getAriaValueText?: boolean | undefined;
    children?: JSX.Element | JSX.Element[] | undefined;
}> & {
    onChange?: ((value: number) => void) | undefined;
    min?: number | undefined;
    max?: number | undefined;
    step?: number | undefined;
    precision?: number | undefined;
    isReadOnly?: boolean | undefined;
    isInvalid?: boolean | undefined;
    isDisabled?: boolean | undefined;
    keepWithinRange?: boolean | undefined;
    allowMouseWheel?: boolean | undefined;
    clampValueOnBlur?: boolean | undefined;
    focusInputOnChange?: boolean | undefined;
    getAriaValueText?: boolean | undefined;
    children?: JSX.Element | JSX.Element[] | undefined;
}> & {
    onChange?: ((value: number) => void) | undefined;
    min?: number | undefined;
    max?: number | undefined;
    step?: number | undefined;
    precision?: number | undefined;
    isReadOnly?: boolean | undefined;
    isInvalid?: boolean | undefined;
    isDisabled?: boolean | undefined;
    keepWithinRange?: boolean | undefined;
    allowMouseWheel?: boolean | undefined;
    clampValueOnBlur?: boolean | undefined;
    focusInputOnChange?: boolean | undefined;
    getAriaValueText?: boolean | undefined;
    children?: JSX.Element | JSX.Element[] | undefined;
}> & {
    onChange?: ((value: number) => void) | undefined;
    min?: number | undefined;
    max?: number | undefined;
    step?: number | undefined;
    precision?: number | undefined;
    isReadOnly?: boolean | undefined;
    isInvalid?: boolean | undefined;
    isDisabled?: boolean | undefined;
    keepWithinRange?: boolean | undefined;
    allowMouseWheel?: boolean | undefined;
    clampValueOnBlur?: boolean | undefined;
    focusInputOnChange?: boolean | undefined;
    getAriaValueText?: boolean | undefined;
    children?: JSX.Element | JSX.Element[] | undefined;
}> & {
    onChange?: ((value: number) => void) | undefined;
    min?: number | undefined;
    max?: number | undefined;
    step?: number | undefined;
    precision?: number | undefined;
    isReadOnly?: boolean | undefined;
    isInvalid?: boolean | undefined;
    isDisabled?: boolean | undefined;
    keepWithinRange?: boolean | undefined;
    allowMouseWheel?: boolean | undefined;
    clampValueOnBlur?: boolean | undefined;
    focusInputOnChange?: boolean | undefined;
    getAriaValueText?: boolean | undefined;
    children?: JSX.Element | JSX.Element[] | undefined;
}> & {
    onChange?: ((value: number) => void) | undefined;
    min?: number | undefined;
    max?: number | undefined;
    step?: number | undefined;
    precision?: number | undefined;
    isReadOnly?: boolean | undefined;
    isInvalid?: boolean | undefined;
    isDisabled?: boolean | undefined;
    keepWithinRange?: boolean | undefined;
    allowMouseWheel?: boolean | undefined;
    clampValueOnBlur?: boolean | undefined;
    focusInputOnChange?: boolean | undefined;
    getAriaValueText?: boolean | undefined;
    children?: JSX.Element | JSX.Element[] | undefined;
}> & {
    onChange?: ((value: number) => void) | undefined;
    min?: number | undefined;
    max?: number | undefined;
    step?: number | undefined;
    precision?: number | undefined;
    isReadOnly?: boolean | undefined;
    isInvalid?: boolean | undefined;
    isDisabled?: boolean | undefined;
    keepWithinRange?: boolean | undefined;
    allowMouseWheel?: boolean | undefined;
    clampValueOnBlur?: boolean | undefined;
    focusInputOnChange?: boolean | undefined;
    getAriaValueText?: boolean | undefined;
    children?: JSX.Element | JSX.Element[] | undefined;
}> & {
    onChange?: ((value: number) => void) | undefined;
    min?: number | undefined;
    max?: number | undefined;
    step?: number | undefined;
    precision?: number | undefined;
    isReadOnly?: boolean | undefined;
    isInvalid?: boolean | undefined;
    isDisabled?: boolean | undefined;
    keepWithinRange?: boolean | undefined;
    allowMouseWheel?: boolean | undefined;
    clampValueOnBlur?: boolean | undefined;
    focusInputOnChange?: boolean | undefined;
    getAriaValueText?: boolean | undefined;
    children?: JSX.Element | JSX.Element[] | undefined;
}> & {
    onChange?: ((value: number) => void) | undefined;
    min?: number | undefined;
    max?: number | undefined;
    step?: number | undefined;
    precision?: number | undefined;
    isReadOnly?: boolean | undefined;
    isInvalid?: boolean | undefined;
    isDisabled?: boolean | undefined;
    keepWithinRange?: boolean | undefined;
    allowMouseWheel?: boolean | undefined;
    clampValueOnBlur?: boolean | undefined;
    focusInputOnChange?: boolean | undefined;
    getAriaValueText?: boolean | undefined;
    children?: JSX.Element | JSX.Element[] | undefined;
} & React.RefAttributes<unknown>>>;
export default _default;
